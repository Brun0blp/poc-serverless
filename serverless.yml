# NOTE: update this with your service name
service: location-stream-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    tableName: locations
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"


  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
  #  SAMPLE_ENV_VAR: ${env:SAMPLE_ENV_VAR}

functions:
  create:
    handler: lambdas/create.main
    events:
      - http:
          path: locations
          method: post
          cors: true
          authorizer: aws_iam

  getLocationsByOs:
    handler: lambdas/get-locations-by-os.main
    events:
      - http:
          path: locations/{osId}
          method: get
          cors: true
          authorizer: aws_iam

  get:
    handler: lambdas/get.main
    events:
      - http:
          path: locations/{osId}/{deliveryId}
          method: get
          cors: true
          authorizer: aws_iam

resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
